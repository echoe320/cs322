define :vec_ctor (){
	%res <- call allocate(7, 1)
	%temp_0 <- 1
	%temp_0 <- %temp_0 + 3
	%temp_0 <- %temp_0 << 1
	%temp_0 <- %temp_0 + 1
	return %res
}

define :memcp32 (){
	return
}

define :memcp23 (){
	return
}

define :vec_do_push_back (){
	call %size (%size, %ptr, %new_val)
	%new_size <- %size + 1
	return
}

define :vec_push_back_alloc (){
	%is_empty <- %ptr & 1
	br %is_empty :alloc_new
	br :check_length
	%temp_3 <- 16
	%temp_4 <- 8 * 0
	%temp_3 <- %temp_3 + %temp_4
	%temp_5 <- %ptr + %temp_3
	%capacity <- load %temp_5
	%len <- %capacity >> 1
	%is_full <- %size = %len
	br %is_full :extend
	br :has_space_left
}

